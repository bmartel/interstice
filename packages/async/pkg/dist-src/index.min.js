import{LitElement,html}from"lit-element";export class AsyncElement extends LitElement{firstUpdated(){this.setup()}setup(){this._loadedPromise||this.reload()}loader(){this._loaded=null,this._errored=null,this._loadedPromise=new Promise((e,r)=>{this._resolveLoaded=e,this._rejectLoaded=r}),this._loadedPromise.then(e=>(this._loaded=(()=>e),this.requestUpdate(),e)).catch(e=>{this._errored=e,this.requestUpdate()})}reload(){this.loader(),this.resolve()}loaded(){return this._loaded}errored(){return this._errored?this.erroring(this._errored):null}async resolve(){try{const e=await this.asyncRender();return this._resolveLoaded(e),e}catch(e){return this._rejectLoaded(e),null}}erroring(e){return html``}loading(){return html``}asyncRender(){return Promise.reject("Must implement asyncRender() in child components")}render(){const e=this.loaded();if(e)return e();const r=this.errored();return r||this.loading()}}
//# sourceMappingURL=index.min.js.map